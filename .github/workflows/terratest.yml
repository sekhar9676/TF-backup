name: Test
on:
  pull_request:
    branches-ignore:
      - main
    paths:
      - '**.go'
      - '**.tf'
  push:
    branches-ignore:
      - main
    paths:
      - '**.go'
      - '**.tf'
jobs:
  terratest:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: '${{ secrets.AWS_ACCESS_KEY_ID }}'
      AWS_SECRET_ACCESS_KEY: '${{ secrets.AWS_SECRET_ACCESS_KEY }}'
      AWS_REGION: '${{ secrets.AWS_REGION }}'
      TF_TOKEN: '${{ secrets.TF_TOKEN }}'
      BUCKET_BUILDS: '${{ secrets.BUCKET_BUILDS }}'
      GH_TOKEN: '${{ secrets.GH_TOKEN }}'
      LAMBDA_S3_KEY: '${{ secrets.LAMBDA_S3_KEY }}'
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
      - name: Render terraform docs inside the README.md and push changes back to PR branch
        uses: terraform-docs/gh-actions@v0.6.1
        with:
          output-file: README.md
          output-method: inject
          git-push: "true"
          working-dir: .,examples/complete
          config-file: .terraform-docs.yml
      - name: Setup actions/checkout
        uses: actions/checkout@v2
        with:
          path: main

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: ^1.16.3

      - name: Go FMT
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          go fmt ./...
          git add .
          git commit -m "github action: go fmt"
          git push
        continue-on-error: true
        working-directory: main/tests

      - name: HashiCorp - Setup Terraform
        uses: hashicorp/setup-terraform@v1.2.1

      - name: Terraform FMT
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          terraform fmt -recursive
          git add .
          git commit -m "github action: terraform fmt"
          git push
        continue-on-error: true
        working-directory: main


      - name: Test Golang Code
        run: |
          GOOS=linux GOARCH=amd64 CGO_ENABLED=0
          go mod tidy
          go test -v ./...
        working-directory: main/tests

